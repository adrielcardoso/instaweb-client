{"version":3,"sources":["history.js","components/DisplayNavbar/DisplayNavbar.js","components/UserHeader/UserHeader.js","components/UserPosts/UserPosts.js","components/Loader/Loader.js","actions/user.js","constants/action-types.js","containers/BackOffice/AlignItemsList.js","containers/BackOffice/BackOffice.js","actions/auth.js","containers/Navbar/Navbar.js","containers/Login/Login.js","containers/Register/Register.js","actions/comment.js","containers/NewComment/NewComment.js","containers/Comments/Comments.js","actions/post.js","containers/Icons/Icons.js","components/DisplayPosts/DisplayPosts.js","containers/Feed/Feed.js","containers/NewPost/NewPost.js","containers/Profile/Profile.js","containers/PostAuthor/PostAuthor.js","components/DisplayPost/DisplayPost.js","containers/Post/Post.js","containers/EditPost/EditPost.js","containers/EditComment/EditComment.js","components/ErrorPage/ErrorPage.js","containers/EditProfile/EditProfile.js","containers/Explore/Explore.js","containers/App/App.js","reducers/auth.js","reducers/post.js","reducers/user.js","reducers/common.js","reducers/index.js","index.js"],"names":["createBrowserHistory","DisplayNavbar","props","react_default","a","createElement","className","localStorage","Auth","Link","to","src","alt","width","style","position","paddingTop","fontFamily","id","dist","size","concat","JSON","parse","getItem","isAdm","onClick","logout","UserHeader","user","avatar","height","username","_id","followers","_step","_iterator","_createForOfIteratorHelper","s","n","done","value","err","e","f","checkIfFollowing","unfollow","follow","length","following","bio","UserPosts","posts","map","post","key","onMouseEnter","hoverPost","onMouseLeave","unhoverPost","image","visible","color","fill","likes","comments","override","css","_templateObject","Loader","react_spinners","sizeUnit","axios","defaults","headers","common","token","getUserProfile","dispatch","get","_HOST","then","response","type","payload","data","catch","error","console","log","editProfile","userId","Object","esm_typeof","formData","FormData","append","name","undefined","put","message","history","push","getPreview","images","preview","resetValue","followUser","unfollowUser","delete","postId","getFollowing","setLoading","useStyles","makeStyles","theme","root","maxWidth","margin","backgroundColor","palette","background","paper","inline","display","AlignItemsList","classes","users","single","ListItem","alignItems","ListItemAvatar","Avatar","ListItemText","primary","secondary","Fragment","Typography","component","variant","ativo","Checkbox","defaultChecked","checked","onChange","event","target","inputProps","aria-label","Divider","BackOffice","state","loading","_this2","this","temp","BackOffice_createForOfIteratorHelper","setState","components_Loader_Loader","Component","connect","actions","loginUser","password","setItem","stringify","userInfo","registerUser","alert","removeItem","Navbar","handleLogout","_this","components_DisplayNavbar_DisplayNavbar","SignInForm","handleSubmit","submitting","pristine","onSubmit","Field","renderField","label","disabled","_ref","input","_ref$meta","meta","touched","warning","assign","placeholder","reduxForm","form","validate","val","errors","Login","Login_SignInForm","loginError","registerSuccess","auth","renderDropzoneField","dirty","dist_es","accept","onDrop","filesToUpload","RegisterForm","onValues","errorMsg","_ref2","_ref2$meta","destroyOnUnmount","file","Register","imgPreview","Register_RegisterForm","imagePreviewError","registerMsg","registerError","addComment","text","singlePost","comment","reset","getComment","commentId","editComment","deleteComment","CommentForm","autoComplete","NewComment","keys","NewComment_CommentForm","Comments","author","getFeed","newPosts","post_createForOfIteratorHelper","includes","getAllPosts","getPost","getPostForEdit","submitNewPost","createPost","caption","editPost","deletePost","likePost","like","dislikePost","likeId","Icons","handleLike","handleDislike","handleDeletePost","renderHeart","Icons_createForOfIteratorHelper","_loop","v","_ret","_step2","_iterator2","authorId","moment","locale","DisplayPosts","description","containers_Comments_Comments","timePosted","fromNow","containers_NewComment_NewComment","Feed","components_DisplayPosts_DisplayPosts","PostForm","NewPost","submitLoading","submitted","NewPost_PostForm","Profile","match","params","prevProps","components_UserHeader_UserHeader","components_UserPosts_UserPosts","PostAuthor","DisplayPost","containers_PostAuthor_PostAuthor","containers_Icons_Icons","Post","postError","components_DisplayPost_DisplayPost","EditPostForm","enableReinitialize","initialValues","EditPost","EditPost_EditPostForm","EditCommentForm","rows","EditComment","commentError","EditComment_EditCommentForm","ErrorPage","EditProfileForm","info","EditProfile","EditProfile_EditProfileForm","Explore","redirectIfNotLoggedIn","Redirect","App","ptBr","Router","Route","path","Switch","exact","render","isAuth","redirect","initialState","editError","deletePostMsg","prevew","combineReducers","arguments","action","success","formReducer","filter","item","toConsumableArray","commentSinglePost","objectSpread","deleteCommentSinglePost","likeSinglePost","dislikeSinglePost","newStateFollow","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","es","containers_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.5753245a.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as Icon from \"react-feather\";\nimport \"./DisplayNavbar.css\";\n\nconst DisplayNavbar = props => {\n  return (\n    <nav className=\"navbar navbar-expand navbar-light bg-white border-bottom fixed-top\">\n      <div className=\"container d-flex justify-content-start\">\n        {!localStorage.Auth ? <Link\n          className=\"navbar-brand d-sm-block\"\n          to={localStorage.Auth ? \"/posts\" : \"/\"}\n        >\n          <img\n            src=\"https://www.flaticon.com/svg/static/icons/svg/3524/3524440.svg\"\n            alt=\"\"\n            width=\"40\"\n          />\n          <label style={{\n                position: 'absolute',\n                paddingTop: '5px',\n                fontFamily: 'monospace'\n          }}>Instagrão</label>\n        </Link>: <p/>}\n\n        {localStorage.Auth && (\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n           \n            <Link\n              className=\"navbar-brand d-none d-sm-block\"\n              to={localStorage.Auth ? \"/posts\" : \"/\"}\n            >\n              <img\n                src=\"https://jbssocial.s3-sa-east-1.amazonaws.com/seara-logo-2.png\"\n                alt=\"\"\n                width=\"60\"\n              />\n            </Link>\n            {/* <form className=\"form-inline ml-auto\">\n              <input\n                type=\"text\"\n                className=\"form-control form-control-sm bg-light text-center\"\n                placeholder=\"Search\"\n              />\n            </form> */}\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item active\">\n                <Link className=\"nav-link\" to=\"/posts/new\">\n                  <Icon.Edit className=\"navIcons\" size={25} />\n                </Link>\n              </li>\n              <li className=\"nav-item active ml-3 mr-3\">\n                <Link className=\"nav-link\" to=\"/explore\">\n                  <Icon.Compass className=\"navIcons\" size={25} />\n                </Link>\n              </li>\n              <li className=\"nav-item active mr-3\">\n                <Link\n                  className=\"nav-link\"\n                  to={`/users/${JSON.parse(localStorage.getItem(\"Auth\")).id}`}\n                >\n                  <Icon.User className=\"navIcons\" size={25} />\n                </Link>\n              </li>\n               {\n                  localStorage.Auth && JSON.parse(localStorage.getItem(\"Auth\")).isAdm && \n                  (\n                    <li className=\"nav-item active ml-3 mr-3\">\n                      <Link className=\"nav-link\" to=\"/backoffice\">\n                        <Icon.Archive className=\"navIcons\" size={25} />\n                      </Link>\n                    </li>\n                  )\n                }\n                <li className=\"nav-item active\">\n                  <div className=\"nav-link\">\n                    <Icon.LogOut\n                      className=\"navIcons\"\n                      size={25}\n                      onClick={props.logout}\n                    />\n                </div>\n              </li>\n            </ul>\n          </div>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nexport default DisplayNavbar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./UserHeader.css\";\n\nconst UserHeader = props => {\n  const user = JSON.parse(localStorage.getItem(\"Auth\"));\n  const checkIfFollowing = followers => {\n    if (followers) {\n      for (const follower of followers) {\n        if (follower._id === user.id) {\n          return true;\n        }\n      }\n    }\n  };\n  return (\n    <div className=\"container component\">\n      {props.user && (\n        <div>\n          <div className=\"d-flex justify-content-center\">\n            <div className=\"row\">\n              <div className=\"col-sm-12 col-md-4 d-flex justify-content-center\">\n                <img\n                  src={props.user.avatar}\n                  alt=\"\"\n                  className=\"mr-5 rounded-circle mx-auto mb-3\"\n                  width=\"150\"\n                  height=\"150\"\n                />\n              </div>\n              <div className=\"col-sm-12 col-md-8\">\n                <span className=\"lead username\">{props.user.username} </span>\n                {props.user._id === user.id ? (\n                  <Link\n                    to={`/accounts/${props.user._id}/edit`}\n                    className=\"ml-2 btn btn-sm btn-outline-dark\"\n                  >\n                    <span className=\"ml-3 mr-3\">Editar Perfil</span>\n                  </Link>\n                ) : checkIfFollowing(props.user.followers) ? (\n                  <button\n                    className=\"ml-2 btn btn-sm btn-outline-dark\"\n                    onClick={() => props.unfollow(props.user._id)}\n                  >\n                    <span className=\"ml-3 mr-3\">Seguindo</span>\n                  </button>\n                ) : (\n                  <button\n                    className=\"ml-2 btn btn-sm btn-primary\"\n                    onClick={() => props.follow(props.user._id)}\n                  >\n                    <span className=\"ml-3 mr-3\">Seguir</span>\n                  </button>\n                )}\n                <div className=\"d-flex mt-3\">\n                  {/* <div className=\"mr-4\">\n                    <span className=\"headerLinks\">\n                      {props.posts && props.posts.length}{\" \"}\n                    </span>\n                    posts\n                  </div> */}\n                  <div className=\"mr-4\">\n                    <Link\n                      to={`/users/${props.user._id}/followers`}\n                      className=\"headerLinks\"\n                    >\n                      {props.user.followers && props.user.followers.length}{\" \"}\n                    </Link>\n                    Seguidores\n                  </div>\n                  <div className=\"mr-4\">\n                    <Link\n                      to={`/users/${props.user._id}/following`}\n                      className=\"headerLinks\"\n                    >\n                      {props.user.following && props.user.following.length}{\" \"}\n                    </Link>\n                    Seguindo\n                  </div>\n                </div>\n                <p className=\"mt-3\">{props.user.bio}</p>\n              </div>\n            </div>\n          </div>\n          <hr />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UserHeader;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as Icon from \"react-feather\";\nimport \"./UserPosts.css\";\n\nconst UserPosts = props => {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        {props.posts &&\n          props.posts.map(post => (\n            <div className=\"col-6 col-sm-6 col-md-4\" key={post._id}>\n              <Link to={`/posts/${post._id}`}>\n                <div\n                  className=\"card border-0 rounded-0 mt-4 mb-2\"\n                  onMouseEnter={() => props.hoverPost(post._id)}\n                  onMouseLeave={() => props.unhoverPost(post._id)}\n                >\n                  <img\n                    src={post.image}\n                    alt=\"\"\n                    className=\"card-img-top rounded-0\"\n                  />\n                  <div\n                    className={`card-img-overlay text-white d-flex justify-content-center align-items-center ${\n                      props.visible === post._id ? `` : `invisible`\n                    }`}\n                  >\n                    <div className=\"mr-4\">\n                      <Icon.Heart\n                        className=\"feedIcons\"\n                        color=\"white\"\n                        fill=\"white\"\n                      />{\" \"}\n                      {post.likes.length}\n                    </div>\n                    <div>\n                      <Icon.MessageCircle\n                        className=\"feedIcons msgCircle\"\n                        color=\"white\"\n                        fill=\"white\"\n                      />{\" \"}\n                      {post.comments.length}\n                    </div>\n                  </div>\n                </div>\n              </Link>\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default UserPosts;\n","import React from \"react\";\nimport { css } from \"react-emotion\";\nimport { FadeLoader } from \"react-spinners\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  margin-top: 200px;\n  text-align: center;\n`;\n\nconst Loader = () => {\n  return (\n    <div className=\"sweet-loading\">\n      <FadeLoader\n        className={override}\n        sizeUnit={\"px\"}\n        size={100}\n        color={\"#003569\"}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import axios from \"axios\";\nimport {\n  USER_PROFILE,\n  RESET_VALUE,\n  GET_PREVIEW,\n  FOLLOW_USER,\n  UNFOLLOW_USER,\n  HOVER_POST,\n  UNHOVER_POST,\n  CHECK_IF_FOLLOWING,\n  EDIT_PROFILE,\n  LOADING,\n  SET_LOADING\n} from \"../constants/action-types\";\nimport { _HOST } from \"../containers/BackOffice/BackOffice\";\nimport history from \"../history\";\n\naxios.defaults.headers.common[\"Authorization\"] = `bearer ${localStorage.token}`;\n\nexport const getUserProfile = id => dispatch => {\n  axios\n    .get(_HOST+`/api/users/${id}`)\n    .then(response => {\n      dispatch({\n        type: USER_PROFILE,\n        payload: { posts: response.data.posts, user: response.data.user }\n      });\n    })\n    .then(response => {\n      dispatch({ type: LOADING, payload: false });\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const editProfile = (data, userId) => dispatch => {\n  if (typeof data.avatar === \"object\" && data.avatar.length > 1) {\n    return dispatch({\n      type: EDIT_PROFILE,\n      payload: \"only 1 image allowed\"\n    });\n  }\n  const formData = new FormData();\n  if (typeof data.avatar === \"object\") {\n    formData.append(\"file\", data.avatar[0]);\n  }\n  if (data.name !== \"\" && data.name !== undefined) {\n    formData.append(\"name\", data.name);\n  }\n  if (data.bio !== \"\" && data.bio !== undefined) {\n    formData.append(\"bio\", data.bio);\n  }\n\n  axios\n    .put(_HOST+`/api/users/${userId}`, formData)\n    .then(response => {\n      dispatch({ type: EDIT_PROFILE, payload: response.data.message });\n      history.push(`/users/${userId}`);\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\n// for image preview\nexport const getPreview = images => dispatch => {\n  if (images[1]) {\n    return dispatch({\n      type: GET_PREVIEW,\n      payload: { message: \"Only 1 image allowed\" }\n    });\n  } else {\n    dispatch({ type: GET_PREVIEW, payload: images[0].preview });\n  }\n};\n\n// resets image preview\nexport const resetValue = () => dispatch => {\n  dispatch({ type: RESET_VALUE, payload: \"\" });\n};\n\nexport const followUser = userId => dispatch => {\n  axios\n    .post(_HOST+`/api/users/${userId}/follow`)\n    .then(response => {\n      dispatch({ type: FOLLOW_USER, payload: response.data });\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const unfollowUser = userId => dispatch => {\n  axios\n    .delete(_HOST+`/api/users/${userId}/follow`)\n    .then(response => {\n      dispatch({ type: UNFOLLOW_USER, payload: response.data });\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const hoverPost = postId => dispatch => {\n  dispatch({ type: HOVER_POST, payload: postId });\n};\n\nexport const unhoverPost = () => dispatch => {\n  dispatch({ type: UNHOVER_POST, payload: null });\n};\n\nexport const getFollowing = id => dispatch => {\n  const user = JSON.parse(localStorage.getItem(\"Auth\"));\n  axios\n    .get(_HOST+`/api/users/${user.id}`)\n    .then(response => {\n      dispatch({\n        type: CHECK_IF_FOLLOWING,\n        payload: response.data.user.following\n      });\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const setLoading = () => dispatch => {\n  dispatch({ type: SET_LOADING, payload: true });\n};\n","// login and register\nexport const LOGIN_USER = \"LOGIN_USER\";\nexport const REGISTER_USER = \"REGISTER_USER\";\nexport const LOGOUT_USER = \"LOGOUT_USER\";\n\n// for image preview\nexport const GET_PREVIEW = \"GET_PREVIEW\";\n\n// for reseting value in inputs\nexport const RESET_VALUE = \"RESET_VALUE\";\n\n// posts\nexport const GET_FEED = \"GET_FEED\";\nexport const GET_POST = \"GET_POST\";\nexport const CREATE_POST = \"CREATE_POST\";\nexport const SUBMIT_NEW_POST = \"SUBMIT_NEW_POST\";\nexport const GET_POST_FOR_EDIT = \"GET_POST_FOR_EDIT\";\nexport const EDIT_POST = \"EDIT_POST\";\nexport const DELETE_POST = \"DELETE_POST\";\nexport const DELETE_SINGLE_POST = \"DELETE_SINGLE_POST\";\nexport const HOVER_POST = \"HOVER_POST\";\nexport const UNHOVER_POST = \" UNHOVER_POST\";\nexport const CHECK_IF_FOLLOWING = \"CHECK_IF_FOLLOWING\";\nexport const POST_ERROR = \"POST_ERROR\";\n\n// comments\nexport const ADD_COMMENT = \"ADD_COMMENT\";\nexport const ADD_COMMENT_SINGLE_POST = \"ADD_COMMENT_SINGLE_POST\";\nexport const EDIT_COMMENT = \"EDIT_COMMENT\";\nexport const DELETE_COMMENT = \"DELETE_COMMENT\";\nexport const DELETE_COMMENT_SINGLE_POST = \"DELETE_COMMENT_SINGLE_POST\";\nexport const GET_COMMENT = \"GET_COMMENT\";\nexport const COMMENT_ERROR = \"COMMENT_ERROR\";\n\n// likes\nexport const LIKE_SINGLE_POST = \"LIKE_SINGLE_POST\";\nexport const LIKE_POST = \"LIKE_POST\";\nexport const DISLIKE_POST = \"DISLIKE_POST\";\nexport const DISLIKE_SINGLE_POST = \"DISLIKE_SINGLE_POST\";\n\n// users\nexport const USER_PROFILE = \"USER_PROFILE\";\nexport const EDIT_PROFILE = \"EDIT_PROFILE\";\nexport const FOLLOW_USER = \"FOLLOW_USER\";\nexport const UNFOLLOW_USER = \"UNFOLLOW_USER\";\n\n// loading\nexport const LOADING = \"LOADING\";\nexport const SUBMIT_LOADING = \"SUBMIT_LOADING\";\nexport const SET_LOADING = \"RESET_LOADING\";\n","import React from 'react';\nimport axios from \"axios\";\nimport { _HOST } from './BackOffice';\nimport { Avatar, Checkbox, Divider, ListItem, ListItemAvatar, ListItemText, makeStyles, Typography } from '@material-ui/core';\nimport { List } from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: '36ch',\n    margin:\"auto\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  inline: {\n    display: 'inline',\n  },\n}));\n\nexport default function AlignItemsList(props) {\n  const classes = useStyles();\n  return (\n    <List className={classes.root}>\n       {props && props.users && props.users.map(single => {\n            console.log(single)\n            return <div style={{width:'100%'}}>\n                <ListItem alignItems=\"flex-start\">\n                        <ListItemAvatar>\n                        <Avatar alt=\"Remy Sharp\" src={single.avatar} />\n                        </ListItemAvatar>\n                        <ListItemText\n                        primary={single.username}\n                        secondary={\n                            <React.Fragment>\n                            <Typography\n                                component=\"span\"\n                                variant=\"body2\"\n                                className={classes.inline}\n                                color=\"textPrimary\"\n                            >\n                                Ativo: {single.ativo}\n                            </Typography>\n                            </React.Fragment>\n                        }\n                        />\n                        <Checkbox\n                            color=\"primary\"\n                            defaultChecked={single.checked}\n                            onChange={(event) => {\n                                console.log(event.target.checked)\n                                console.log(single)\n                                axios\n                                    .put(_HOST+\"/api/user/\"+single.id+\"/status/\"+event.target.checked)\n                                    .then(response => {\n                                        console.log(response)\n                                    })\n                                    .catch(error => {\n                                        console.log(error);\n                                    });\n                            }}\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                        />\n                    </ListItem>\n                    <Divider variant=\"inset\" component=\"li\" />\n            </div>\n       })}\n    </List>\n  );\n}","import React, { Component } from \"react\";\nimport UserHeader from \"../../components/UserHeader/UserHeader\";\nimport UserPosts from \"../../components/UserPosts/UserPosts\";\nimport Loader from \"../../components/Loader/Loader\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/user\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n// import { DataGrid } from '@material-ui/data-grid';\n// import { Button } from '@material-ui/core';\nimport { CREATE_POST } from \"../../constants/action-types\";\nimport AlignItemsList from \"./AlignItemsList\";\n\n// export const _HOST = \"http://localhost:5000\"\nexport const _HOST = \"http://social.mobsistema.com.br:5000\"\n\nconst columns = [\n  { field: 'id', headerName: 'id', },\n  { field: 'username', headerName: 'username', },\n  { field: 'avatar', headerName: 'avatar', },\n  { field: 'name', headerName: 'name', },\n  { field: 'ativo', headerName: 'ativo', },\n];\n\nconst sortModel = [\n  {\n    field: 'username',\n    sort: 'asc',\n  },\n];\n\naxios.defaults.headers.common[\"Authorization\"] = `bearer ${localStorage.token}`;\n\nconst BackOfficeState = state => {\n  return {\n    user: state.user.user,\n    posts: state.user.posts,\n    visible: state.common.visible,\n    loading: state.common.loading\n  };\n};\n\nclass BackOffice extends Component {\n\n  state = {\n    loading: true,\n    users: []\n  }\n\n  componentWillMount(){\n      axios\n        .get(_HOST+\"/api/users-all\")\n        .then(response => {\n          let users = []\n          if(response.data && response.data.user && response.data.user.length > 0){\n            let temp = []\n            for(let single of response.data.user){\n                temp.push({\n                  id: single._id,\n                  username: single.username,\n                  avatar: single.avatar,\n                  name: single.name,\n                  ativo: single.checked?\"SIM\":\"NÃO\",\n                  checked: single.checked\n                })\n            }\n            users = temp\n          }\n          this.setState({loading: false, users: users})\n        })\n        .catch(error => {\n          console.log(error);\n        });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.loading ? (\n          <Loader />\n        ) : (\n          <div>\n            <div className=\"container\">\n              <div className=\"text-center component\">\n                <h4>Controle de Acessos</h4>\n                <p className=\"lead\">\n                  Defina os usuários que poderão acessar a plataforma\n                </p>\n              </div>\n            </div>\n            <AlignItemsList users={this.state.users} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  BackOfficeState,\n  actions\n)(BackOffice);\n","import axios from \"axios\";\nimport {\n  LOGIN_USER,\n  REGISTER_USER,\n  LOGOUT_USER,\n  RESET_VALUE,\n  GET_PREVIEW\n} from \"../constants/action-types\";\nimport { _HOST } from \"../containers/BackOffice/BackOffice\";\nimport history from \"../history\";\n\naxios.defaults.headers.common[\"Authorization\"] = `bearer ${localStorage.token}`;\n\nexport const loginUser = data => dispatch => {\n  const { username, password } = data;\n\n  axios\n    .post(_HOST+\"/api/auth/login\", {\n      username: username,\n      password: password\n    })\n    .then(response => {\n      if (response.data.message) {\n        dispatch({ type: LOGIN_USER, payload: response.data.message });\n      } else if (!response.data.message && response.data.token) {\n        console.log(response.data)\n        localStorage.setItem(\"Auth\", JSON.stringify(response.data.userInfo));\n        localStorage.setItem(\"token\", response.data.token);\n        axios.defaults.headers.common[\"Authorization\"] = `bearer ${\n          response.data.token\n        }`;\n        dispatch({ type: LOGIN_USER, payload: response.data.userInfo });\n      }\n    })\n    .catch(error => {\n      console.log(error);\n      dispatch({ type: LOGIN_USER, payload: \"error\" });\n    });\n};\n\nexport const registerUser = data => dispatch => {\n  const formData = new FormData();\n  if (data.image) {\n    formData.append(\"file\", data.image[0]);\n  }else{\n    alert(\"Selecione uma Foto\")\n    return \n  }\n  formData.append(\"username\", data.username);\n  formData.append(\"password\", data.password);\n  axios\n    .post(_HOST+\"/api/auth/register\", formData)\n    .then(response => {\n      dispatch({ type: REGISTER_USER, payload: response.data });\n      if (!response.data.error) {\n        history.push(\"/\");\n      }\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const logout = () => dispatch => {\n  axios\n    .post(_HOST+\"/api/auth/logout\")\n    .then(response => {\n      localStorage.removeItem(\"Auth\");\n      localStorage.removeItem(\"token\");\n      dispatch({ type: LOGOUT_USER, payload: \"/\" });\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\n// for image preview\nexport const getPreview = images => dispatch => {\n  if (images[1]) {\n    return dispatch({\n      type: GET_PREVIEW,\n      payload: { message: \"Only 1 image allowed\" }\n    });\n  } else {\n    dispatch({ type: GET_PREVIEW, payload: images[0].preview });\n  }\n};\n\n// resets image preview\nexport const resetValue = () => dispatch => {\n  dispatch({ type: RESET_VALUE, payload: \"\" });\n};\n","import React, { Component } from \"react\";\nimport DisplayNavbar from \"../../components/DisplayNavbar/DisplayNavbar\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/auth\";\n\nclass Navbar extends Component {\n  handleLogout = () => {\n    this.props.logout();\n  };\n\n  render() {\n    return <DisplayNavbar logout={() => this.handleLogout()} />;\n  }\n}\n\nexport default connect(\n  null,\n  actions\n)(Navbar);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { reduxForm, Field } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/auth\";\nimport \"./Login.css\";\n\nconst mapStateToProps = state => {\n  return {\n    loginError: state.auth.loginError,\n    registerSuccess: state.auth.registerSuccess\n  };\n};\n\nlet SignInForm = props => {\n  const { handleSubmit, submitting, pristine } = props;\n  return (\n    <form onSubmit={handleSubmit} className=\"mt-4\">\n      <Field\n        name=\"username\"\n        component={renderField}\n        type=\"text\"\n        label=\"Nome\"\n      />\n\n      <Field\n        name=\"password\"\n        component={renderField}\n        type=\"password\"\n        label=\"Senha\"\n      />\n\n      <button\n        className=\"btn btn-primary btn-sm btn-block mt-3\"\n        disabled={pristine || submitting}\n      >\n        Entrar\n      </button>\n    </form>\n  );\n};\n\nconst validate = val => {\n  const errors = {};\n  if (!val.username) {\n    errors.username = \"Required\";\n  }\n  if (!val.password) {\n    errors.password = \"Required\";\n  }\n  return errors;\n};\n\nconst renderField = ({\n  input,\n  label,\n  type,\n  meta: { touched, error, warning }\n}) => (\n  <div>\n    {/* <label className=\"field\">{label}</label> */}\n    <input\n      className=\"form-control form-control-sm mt-1 inputBg\"\n      {...input}\n      placeholder={label}\n      type={type}\n    />\n    {touched &&\n      ((error && <small className=\"error\">{error}</small>) ||\n        (warning && <small className=\"error\">{warning}</small>))}\n  </div>\n);\n\nSignInForm = reduxForm({\n  form: \"signIn\",\n  validate\n})(SignInForm);\n\nclass Login extends Component {\n  componentWillUnmount() {\n    this.props.resetValue();\n  }\n\n  handleSubmit = data => {\n    this.props.loginUser(data);\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"container d-flex justify-content-center component\">\n          <div className=\"card p-5 infoCards rounded-0\">\n            <img\n              src=\"https://jbssocial.s3-sa-east-1.amazonaws.com/logo_seara_interna.png\"\n              alt=\"\"\n              className=\"mx-auto\"\n              width=\"150\"\n            />\n            <SignInForm onSubmit={this.handleSubmit} />\n            {/* <button className=\"btn btn-primary btn-sm btn-block mt-1\">\n              Demo Login\n            </button> */}\n            {this.props.loginError && (\n              <small className=\"error text-center mt-3\">\n                {this.props.loginError}\n              </small>\n            )}\n            {this.props.registerSuccess && (\n              <small className=\"success text-center mt-3\">\n                {this.props.registerSuccess}\n              </small>\n            )}\n          </div>\n        </div>\n        <div className=\"container d-flex justify-content-center mt-2\">\n          <div className=\"card text-center infoCards rounded-0\">\n            <div className=\"card-body\">\n              Não tem uma Conta? <Link to=\"/register\">Cadastrar</Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(Login);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { reduxForm, Field } from \"redux-form\";\nimport Dropzone from \"react-dropzone\";\nimport * as Icon from \"react-feather\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/auth\";\nimport \"./Register.css\";\n\nconst mapStateToProps = state => {\n  return {\n    registerMsg: state.auth.registerError,\n    imgPreview: state.common.preview,\n    imagePreviewError: state.common.imagePreviewError\n  };\n};\n\nconst renderDropzoneField = ({ input, name, meta: { dirty, error } }) => {\n  return (\n    <div>\n      <Dropzone\n        name={name}\n        className=\"drop mt-1 rounded\"\n        accept=\"image/jpeg, image/jpg, image/png\"\n        onDrop={filesToUpload => input.onChange(filesToUpload)}\n      >\n        <div className=\"d-flex justify-content-center h-100\">\n          <div className=\"text-center align-self-center\">\n            <div>\n              <Icon.Plus className=\"text-muted camera\" />\n            </div>\n            <span className=\"text-muted avatarText\">Foto do Perfil</span>\n          </div>\n        </div>\n      </Dropzone>\n      {dirty && (error && <small className=\"error\">{error}</small>)}\n    </div>\n  );\n};\n\nlet RegisterForm = props => {\n  const { handleSubmit, onValues, submitting, pristine, errorMsg } = props;\n  return (\n    <form onSubmit={handleSubmit} className=\"mt-4\">\n      <Field\n        name=\"username\"\n        component={renderField}\n        type=\"text\"\n        label=\"Nome\"\n      />\n\n      <Field\n        name=\"password\"\n        component={renderField}\n        type=\"password\"\n        label=\"Senha\"\n      />\n\n      <Field name=\"image\" component={renderDropzoneField} onChange={onValues} />\n      {errorMsg && <small className=\"error\">{errorMsg}</small>}\n      <button\n        className=\"btn btn-primary btn-sm btn-block mt-3\"\n        disabled={pristine || submitting}\n      >\n        Cadastrar\n      </button>\n    </form>\n  );\n};\n\nconst validate = val => {\n  const errors = {};\n  if (!val.username) {\n    errors.username = \"Required\";\n  }\n  if (!val.password) {\n    errors.password = \"Required\";\n  }\n  if (!val.file) {\n    errors.file = \"Required\";\n  }\n  return errors;\n};\n\nconst renderField = ({\n  input,\n  label,\n  type,\n  meta: { touched, error, warning }\n}) => (\n  <div>\n    {/* <label className=\"field\">{label}</label> */}\n    <input\n      className=\"form-control form-control-sm mt-1 inputBg\"\n      {...input}\n      placeholder={label}\n      type={type}\n    />\n    {touched &&\n      ((error && <small className=\"error\">{error}</small>) ||\n        (warning && <small className=\"error\">{warning}</small>))}\n  </div>\n);\n\nRegisterForm = reduxForm({\n  form: \"signUp\",\n  destroyOnUnmount: true,\n  validate\n})(RegisterForm);\n\nclass Register extends Component {\n  handleSubmit = data => {\n    this.props.registerUser(data);\n  };\n\n  onValues = images => {\n    this.props.getPreview(images);\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"container d-flex justify-content-center component\">\n          <div className=\"card p-5 infoCards rounded-0\">\n            <img\n              src=\"https://jbssocial.s3-sa-east-1.amazonaws.com/logo_seara_interna.png\"\n              alt=\"\"\n              className=\"mx-auto\"\n              width=\"150\"\n            />\n            {this.props.imgPreview && (\n              <div className=\"text-center mt-4\">\n                <img\n                  src={this.props.imgPreview}\n                  className=\"imgPreview\"\n                  alt=\"\"\n                  width=\"100%\"\n                />\n              </div>\n            )}\n            <RegisterForm\n              onSubmit={this.handleSubmit}\n              onValues={this.onValues}\n              preview={this.props.imgPreview}\n              errorMsg={this.props.imagePreviewError}\n            />\n            <div className=\"text-center mt-3\">\n              <small className=\"error\">\n                {this.props.registerMsg && this.props.registerMsg}\n              </small>\n            </div>\n          </div>\n        </div>\n        <div className=\"container d-flex justify-content-center mt-2\">\n          <div className=\"card text-center infoCards rounded-0\">\n            <div className=\"card-body\">\n              Tem uma Conta? <Link to=\"/\">Entrar</Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default connect(\n  mapStateToProps,\n  actions\n)(Register);\n","import axios from \"axios\";\nimport { reset } from \"redux-form\";\nimport {\n  RESET_VALUE,\n  ADD_COMMENT,\n  EDIT_COMMENT,\n  DELETE_COMMENT,\n  ADD_COMMENT_SINGLE_POST,\n  DELETE_COMMENT_SINGLE_POST,\n  GET_COMMENT,\n  CHECK_IF_FOLLOWING,\n  COMMENT_ERROR\n} from \"../constants/action-types\";\nimport { _HOST } from \"../containers/BackOffice/BackOffice\";\nimport history from \"../history\";\n\naxios.defaults.headers.common[\"Authorization\"] = `bearer ${localStorage.token}`;\n\n// resets image preview\nexport const resetValue = () => dispatch => {\n  dispatch({ type: RESET_VALUE, payload: \"\" });\n};\n\nexport const addComment = (text, postId, singlePost) => dispatch => {\n  axios\n    .post(_HOST+`/api/posts/${postId}/comments`, {\n      comment: text.comment\n    })\n    .then(response => {\n      // checks if function was called from a single post page instead of the feed\n      if (singlePost) {\n        dispatch(reset(postId));\n        return dispatch({\n          type: ADD_COMMENT_SINGLE_POST,\n          payload: response.data.comment\n        });\n      } else {\n        dispatch(reset(postId));\n        return dispatch({\n          type: ADD_COMMENT,\n          payload: {\n            postId: response.data.postId,\n            comment: response.data.comment\n          }\n        });\n      }\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const getComment = (postId, commentId) => dispatch => {\n  axios\n    .get(_HOST+`/api/posts/${postId}/comments/${commentId}/edit`)\n    .then(comment => {\n      console.log(comment);\n      if (comment.data.error) {\n        dispatch({ type: COMMENT_ERROR, payload: comment.data.error });\n      } else {\n        dispatch({ type: GET_COMMENT, payload: comment.data.comment });\n      }\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const editComment = (postId, commentId, text) => dispatch => {\n  axios\n    .put(_HOST+`/api/posts/${postId}/comments/${commentId}`, { comment: text })\n    .then(response => {\n      dispatch({ type: EDIT_COMMENT, payload: response.data.message });\n      history.push(`/posts/${postId}`);\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const deleteComment = (postId, comment, singlePost) => dispatch => {\n  axios\n    .delete(_HOST+`/api/posts/${postId}/comments/${comment._id}`)\n    .then(response => {\n      if (singlePost) {\n        dispatch({\n          type: DELETE_COMMENT_SINGLE_POST,\n          payload: comment\n        });\n      } else {\n        dispatch({\n          type: DELETE_COMMENT,\n          payload: { postId, commentId: comment._id }\n        });\n      }\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const getFollowing = id => dispatch => {\n  const user = JSON.parse(localStorage.getItem(\"Auth\"));\n  axios\n    .get(_HOST+`/api/users/${user.id}`)\n    .then(response => {\n      dispatch({\n        type: CHECK_IF_FOLLOWING,\n        payload: response.data.user.following\n      });\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n","import React, { Component } from \"react\";\nimport { reduxForm, Field } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/comment\";\nimport \"./NewComment.css\";\n\nlet CommentForm = props => {\n  const { handleSubmit, pristine, submitting } = props;\n  return (\n    <form onSubmit={handleSubmit}>\n      <Field\n        name=\"comment\"\n        className=\"form-control form-control-sm border-0 commentInput\"\n        component=\"input\"\n        type=\"text\"\n        placeholder=\"Comentar...\"\n        autoComplete=\"off\"\n      />\n\n      <button\n        className=\"btn btn-primary btn-sm btn-block mt-2 d-block d-sm-none\"\n        disabled={pristine || submitting}\n      >\n        Post\n      </button>\n    </form>\n  );\n};\n\nCommentForm = reduxForm({ destroyOnUnmount: true })(CommentForm);\n\nclass NewComment extends Component {\n  handleSubmit = data => {\n    if (Object.keys(data).length !== 0 && this.props.singlePost) {\n      this.props.addComment(data, this.props.postId, true);\n    } else if (Object.keys(data).length !== 0) {\n      this.props.addComment(data, this.props.postId, false);\n    }\n  };\n\n  render() {\n    return (\n      <CommentForm form={`${this.props.postId}`} onSubmit={this.handleSubmit} />\n    );\n  }\n}\n\nexport default connect(\n  null,\n  actions\n)(NewComment);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as Icon from \"react-feather\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/comment\";\nimport \"./Comments.css\";\n\nclass Comments extends Component {\n  render() {\n    return (\n      <div>\n        {this.props.comments &&\n          this.props.comments.map(comment => (\n            <div key={comment._id}>\n              <Link to={`/users/${comment.author.id}`} className=\"feedLinks\">\n                {comment.author.username}\n              </Link>{\" \"}\n              {comment.text}{\" \"}\n              {comment.author.id ===\n                JSON.parse(localStorage.getItem(\"Auth\")).id && (\n                <span>\n                  {\" \"}\n                  <span className=\"float-right feedLinks\">\n                    <Icon.Trash2\n                      size={14}\n                      className=\"feedIcons\"\n                      onClick={() =>\n                        this.props.deleteComment(\n                          this.props.postId,\n                          comment,\n                          this.props.singlePost\n                        )\n                      }\n                    />\n                  </span>\n                  <Link\n                    to={`/edit/posts/${this.props.postId}/comments/${\n                      comment._id\n                    }`}\n                    className=\"float-right feedLinks\"\n                  >\n                    <Icon.Edit2 size={14} className=\"feedIcons mr-2\" />\n                  </Link>\n                </span>\n              )}\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  actions\n)(Comments);\n","import axios from \"axios\";\nimport {\n  RESET_VALUE,\n  GET_PREVIEW,\n  CREATE_POST,\n  EDIT_POST,\n  DELETE_POST,\n  DELETE_SINGLE_POST,\n  GET_FEED,\n  GET_POST,\n  LIKE_POST,\n  DISLIKE_POST,\n  SUBMIT_NEW_POST,\n  LIKE_SINGLE_POST,\n  DISLIKE_SINGLE_POST,\n  GET_POST_FOR_EDIT,\n  LOADING,\n  SUBMIT_LOADING,\n  POST_ERROR,\n  SET_LOADING\n} from \"../constants/action-types\";\nimport { _HOST } from \"../containers/BackOffice/BackOffice\";\nimport history from \"../history\";\n\naxios.defaults.headers.common[\"Authorization\"] = `bearer ${localStorage.token}`;\n\nexport const getFeed = () => dispatch => {\n  axios\n    .get(_HOST+\"/api/posts\")\n    .then(response => {\n      const newPosts = [];\n      for (const post of response.data.posts) {\n        if (\n          response.data.user.following.includes(post.author.id) ||\n          post.author.id === response.data.user._id\n        ) {\n          newPosts.push(post);\n        }\n      }\n      dispatch({ type: GET_FEED, payload: newPosts });\n    })\n    .then(response => {\n      dispatch({ type: LOADING, payload: false });\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const getAllPosts = () => dispatch => {\n  axios\n    .get(_HOST+\"/api/posts\")\n    .then(response => {\n      dispatch({ type: GET_FEED, payload: response.data.posts });\n    })\n    .then(response => {\n      dispatch({ type: LOADING, payload: false });\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const getPost = postId => dispatch => {\n  axios\n    .get(_HOST+`/api/posts/${postId}`)\n    .then(post => {\n      if (post.data.error) {\n        dispatch({ type: POST_ERROR, payload: post.data.error });\n      } else {\n        dispatch({ type: GET_POST, payload: post.data });\n      }\n    })\n    .then(response => {\n      dispatch({ type: LOADING, payload: false });\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const getPostForEdit = postId => dispatch => {\n  axios\n    .get(_HOST+`/api/posts/${postId}/edit`)\n    .then(post => {\n      dispatch({ type: GET_POST_FOR_EDIT, payload: post.data });\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\n// hides new post form after submit to prevent user from spamming submit\nexport const submitNewPost = () => dispatch => {\n  dispatch({ type: SUBMIT_NEW_POST, payload: true });\n  dispatch({ type: SUBMIT_LOADING, payload: true });\n};\n\nexport const createPost = data => dispatch => {\n  const formData = new FormData();\n  formData.append(\"file\", data.image[0]);\n  if (data.caption) {\n    formData.append(\"caption\", data.caption);\n  }\n\n  axios\n    .post(_HOST+\"/api/posts\", formData)\n    .then(post => {\n      console.log(post.data);\n      dispatch({ type: CREATE_POST, payload: post.data });\n      history.push(\"/posts\");\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const editPost = (data, postId) => dispatch => {\n  if (typeof data.image === \"object\" && data.image.length > 1) {\n    return dispatch({\n      type: EDIT_POST,\n      payload: \"Only 1 image allowed\"\n    });\n  }\n  const formData = new FormData();\n  if (typeof data.image === \"object\") {\n    formData.append(\"file\", data.image[0]);\n  }\n  if (data.caption !== \"\" && data.caption !== undefined) {\n    formData.append(\"caption\", data.caption);\n  }\n\n  axios\n    .put(_HOST+`/api/posts/${postId}`, formData)\n    .then(post => {\n      dispatch({ type: EDIT_POST, payload: \"Updated Post\" });\n      history.push(`/posts/${post.data._id}`);\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const deletePost = (postId, singlePost) => dispatch => {\n  axios\n    .delete(_HOST+`/api/posts/${postId}`)\n    .then(response => {\n      if (singlePost) {\n        dispatch({\n          type: DELETE_SINGLE_POST,\n          payload: response\n        });\n      } else {\n        dispatch({\n          type: DELETE_POST,\n          payload: postId\n        });\n      }\n      history.push(\"/posts\");\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const likePost = (postId, singlePost) => dispatch => {\n  axios\n    .post(_HOST+`/api/posts/${postId}/likes`)\n    .then(response => {\n      if (singlePost) {\n        return dispatch({\n          type: LIKE_SINGLE_POST,\n          payload: response.data.like\n        });\n      } else {\n        return dispatch({\n          type: LIKE_POST,\n          payload: { postId, like: response.data.like }\n        });\n      }\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const dislikePost = (postId, like, singlePost) => dispatch => {\n  axios\n    .delete(_HOST+`/api/posts/${postId}/likes/${like._id}`)\n    .then(post => {\n      if (singlePost) {\n        return dispatch({\n          type: DISLIKE_SINGLE_POST,\n          payload: like\n        });\n      } else {\n        dispatch({\n          type: DISLIKE_POST,\n          payload: { postId, likeId: like._id }\n        });\n      }\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\n// for image preview\nexport const getPreview = images => dispatch => {\n  if (images[1]) {\n    return dispatch({\n      type: GET_PREVIEW,\n      payload: { message: \"Only 1 image allowed\" }\n    });\n  } else {\n    dispatch({ type: GET_PREVIEW, payload: images[0].preview });\n  }\n};\n\n// resets image preview\nexport const resetValue = () => dispatch => {\n  dispatch({ type: RESET_VALUE, payload: \"\" });\n};\n\nexport const setLoading = () => dispatch => {\n  dispatch({ type: SET_LOADING, payload: true });\n};\n","import React, { Component } from \"react\";\nimport * as Icon from \"react-feather\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/post\";\n\nclass Icons extends Component {\n  handleLike = () => {\n    this.props.likePost(this.props.postId, this.props.singlePost);\n  };\n\n  handleDislike = like => {\n    this.props.dislikePost(this.props.postId, like, this.props.singlePost);\n  };\n\n  handleDeletePost = () => {\n    this.props.deletePost(this.props.postId, this.props.singlePost);\n  };\n\n  renderHeart = () => {\n    const user = JSON.parse(localStorage.getItem(\"Auth\"));\n\n    if (this.props.likes.length === 0) {\n      return (\n        <span>\n          <Icon.Heart\n            className=\"mr-2 feedIcons\"\n            onClick={() => this.handleLike()}\n          />\n        </span>\n      );\n    }\n\n    if (this.props.likes.length !== 0) {\n      for (const like of this.props.likes) {\n        if (like._id === user.id) {\n          return (\n            <span>\n              <Icon.Heart\n                className=\"mr-2 feedIcons\"\n                color=\"red\"\n                fill=\"red\"\n                onClick={() => this.handleDislike(like)}\n              />\n            </span>\n          );\n        }\n      }\n      for (const like of this.props.likes) {\n        if (like._id !== user.id) {\n          return (\n            <span>\n              <Icon.Heart\n                className=\"mr-2 feedIcons\"\n                onClick={() => this.handleLike()}\n              />\n            </span>\n          );\n        }\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        {this.renderHeart()}\n        <Icon.MessageCircle className=\"mr-2 feedIcons msgCircle\" />\n        {this.props.authorId === JSON.parse(localStorage.getItem(\"Auth\")).id ? (\n          <span>\n            <Icon.Trash2\n              className=\"feedIcons float-right\"\n              onClick={() => this.handleDeletePost()}\n            />\n            <Link to={`/edit/posts/${this.props.postId}`}>\n              <Icon.Edit2 className=\"feedIcons text-dark float-right mr-2\" />\n            </Link>\n          </span>\n        ) : (\n          <Icon.Bookmark className=\"feedIcons float-right\" />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  actions\n)(Icons);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport NewComment from \"../../containers/NewComment/NewComment\";\nimport Comments from \"../../containers/Comments/Comments\";\nimport Icons from \"../../containers/Icons/Icons\";\nimport moment from \"moment\";\nimport \"./DisplayPosts.css\";\n\nmoment.locale('pt-BR') \n\nconst DisplayPosts = props => {\n  return (\n    <div>\n      {props.posts && props.posts.length === 0 ? (\n        <div className=\"container\">\n          <div className=\"text-center component\">\n            <h4>Você não está seguindo ninguém.</h4>\n            <p className=\"lead\">\n              Navegue sobre o {\" \"}\n              <Link to=\"/explore\" className=\"instaLinks text-primary\">\n                Explorar\n              </Link>{\" \"}\n              para encontrar seguidores.\n            </p>\n          </div>\n        </div>\n      ) : (\n        <div className=\"container mt-5\">\n          <div className=\"row\">\n            {props.posts &&\n              props.posts.map(post => (\n                <div\n                  key={post._id}\n                  className=\"col-12 d-flex justify-content-center\"\n                >\n                  <div className=\"card feedCard mt-5\">\n                    <div className=\"card-header bg-white p-3\">\n                      <img\n                        src={post.author.avatar}\n                        alt=\"\"\n                        className=\"rounded-circle mr-2\"\n                        width=\"30px\"\n                        height=\"30px\"\n                      />\n                      <Link\n                        to={`/users/${post.author.id}`}\n                        className=\"feedLinks\"\n                      >\n                        {post.author.username}{\" \"}\n                      </Link>\n                    </div>\n                    <img\n                      src={post.image}\n                      alt=\"\"\n                      className=\"card-img-top rounded-0\"\n                    />\n                    <div className=\"p-3\">\n                      {/* <Icons\n                        authorId={post.author.id}\n                        postId={post._id}\n                        likes={post.likes}\n                      /> */}\n                      <div className=\"mt-2\">\n                        <Link\n                          to={`/posts/${post._id}/liked_by`}\n                          className=\"feedLinks\"\n                        >\n                          {post.likes.length} Curtiu\n                        </Link>\n                      </div>\n                      {post.description && (\n                        <div className=\"mt-1\">\n                          <Link\n                            to={`/users/${post.author.id}`}\n                            className=\"feedLinks\"\n                          >\n                            {post.author.username}\n                          </Link>{\" \"}\n                          {post.description}\n                        </div>\n                      )}\n                      <Comments postId={post._id} comments={post.comments} />\n                      <div>\n                        <Link\n                          to={`/posts/${post._id}`}\n                          className=\"text-uppercase postDate\"\n                        >\n                          {moment(post.timePosted).fromNow()}\n                        </Link>\n                      </div>\n                      <hr />\n                      <NewComment postId={post._id} />\n                    </div>\n                  </div>\n                </div>\n              ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DisplayPosts;\n","import React, { Component } from \"react\";\nimport DisplayPosts from \"../../components/DisplayPosts/DisplayPosts\";\nimport Loader from \"../../components/Loader/Loader\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/post\";\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.post.posts,\n    loading: state.common.loading\n  };\n};\n\nclass Feed extends Component {\n  componentDidMount() {\n    this.props.setLoading();\n    this.props.getFeed();\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.loading ? (\n          <Loader />\n        ) : (\n          <DisplayPosts posts={this.props.posts} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(Feed);\n","import React, { Component } from \"react\";\nimport { reduxForm, Field } from \"redux-form\";\nimport Dropzone from \"react-dropzone\";\nimport Loader from \"../../components/Loader/Loader\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/post\";\nimport * as Icon from \"react-feather\";\nimport \"./NewPost.css\";\n\nconst mapStateToProps = state => {\n  return {\n    imgPreview: state.common.preview,\n    imagePreviewError: state.common.imagePreviewError,\n    submitted: state.common.submitted,\n    submitLoading: state.common.submitLoading\n  };\n};\n\n// const validateImage = imageList => {\n//   if (imageList) {\n//     if (imageList.length > 1) {\n//       return \"Only 1 image allowed\";\n//     } else if (imageList.length === 1) {\n//       let selectedImage = imageList[0];\n//       if (!selectedImage.type.match(\"image.*\")) {\n//         return \"Only image files are allowed\";\n//       } else if (selectedImage.size > 1048576) {\n//         return \"Maximum file size exceeded\";\n//       }\n//     }\n//   }\n// };\n\nconst renderDropzoneField = ({ input, name }) => {\n  return (\n    <Dropzone\n      name={name}\n      className=\"drop mt-1 rounded\"\n      accept=\"image/jpeg, image/jpg, image/png\"\n      onDrop={filesToUpload => input.onChange(filesToUpload)}\n    >\n      <div className=\"d-flex justify-content-center h-100\">\n        <div className=\"text-center align-self-center\">\n          <div>\n            <Icon.Plus className=\"text-muted camera\" />\n          </div>\n          <span className=\"text-muted avatarText\">Escolher Foto</span>\n        </div>\n      </div>\n    </Dropzone>\n  );\n};\n\nlet PostForm = props => {\n  const { handleSubmit, onValues, preview, errorMsg } = props;\n  return (\n    <form onSubmit={handleSubmit} className=\"mt-4\">\n      {errorMsg && <small className=\"error\">{errorMsg}</small>}\n      <Field name=\"image\" component={renderDropzoneField} onChange={onValues} />\n      <Field\n        name=\"caption\"\n        component={renderField}\n        type=\"text\"\n        label=\"Descrição...\"\n      />\n      {preview ? (\n        <button className=\"btn btn-primary btn-sm btn-block mt-3\">POSTAR</button>\n      ) : (\n        <button className=\"btn btn-primary btn-sm btn-block mt-3\" disabled>\n          POSTAR\n        </button>\n      )}\n    </form>\n  );\n};\n\nconst renderField = ({ input, label, type }) => (\n  <textarea\n    className=\"form-control form-control-sm mt-1 inputBg\"\n    {...input}\n    placeholder={label}\n    type={type}\n  />\n);\n\nPostForm = reduxForm({\n  form: \"createPost\",\n  destroyOnUnmount: true\n})(PostForm);\n\nclass NewPost extends Component {\n  handleSubmit = data => {\n    this.props.submitNewPost();\n    this.props.createPost(data);\n  };\n\n  onValues = images => {\n    this.props.getPreview(images);\n  };\n\n  componentWillUnmount() {\n    this.props.resetValue();\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"container d-flex justify-content-center component\">\n          {this.props.submitLoading ? (\n            <Loader />\n          ) : (\n            <div\n              className={`card p-2 postCard rounded-0 ${this.props.submitted &&\n                `d-none`}`}\n            >\n              <div className=\"card-body\">\n                <h1 className=\"text-center\">Nova Postagem</h1>\n                {this.props.imgPreview && (\n                  <div className=\"text-center mt-4\">\n                    <img\n                      src={this.props.imgPreview}\n                      className=\"imgPreview\"\n                      alt=\"\"\n                      width=\"100%\"\n                    />\n                  </div>\n                )}\n                <PostForm\n                  onSubmit={this.handleSubmit}\n                  onValues={this.onValues}\n                  preview={this.props.imgPreview}\n                  errorMsg={this.props.imagePreviewError}\n                />\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nexport default connect(\n  mapStateToProps,\n  actions\n)(NewPost);\n","import React, { Component } from \"react\";\nimport UserHeader from \"../../components/UserHeader/UserHeader\";\nimport UserPosts from \"../../components/UserPosts/UserPosts\";\nimport Loader from \"../../components/Loader/Loader\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/user\";\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.user,\n    posts: state.user.posts,\n    visible: state.common.visible,\n    loading: state.common.loading\n  };\n};\n\nclass Profile extends Component {\n  componentDidMount() {\n    this.props.setLoading();\n    this.props.getUserProfile(this.props.match.params.userId);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\n      this.props.getUserProfile(this.props.match.params.userId);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.loading ? (\n          <Loader />\n        ) : (\n          <div>\n            <UserHeader\n              user={this.props.user}\n              follow={this.props.followUser}\n              unfollow={this.props.unfollowUser}\n            />\n            <UserPosts\n              posts={this.props.posts}\n              visible={this.props.visible}\n              hoverPost={this.props.hoverPost}\n              unhoverPost={this.props.unhoverPost}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(Profile);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/user\";\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.user\n  };\n};\n\nclass PostAuthor extends Component {\n  componentDidMount() {\n    this.props.getUserProfile(this.props.userId);\n  }\n\n  render() {\n    return (\n      <div>\n        <img\n          src={this.props.user.avatar}\n          alt=\"\"\n          className=\"rounded-circle mr-2\"\n          width=\"30px\"\n          height=\"30px\"\n        />\n        <Link to={`/users/${this.props.user._id}`} className=\"feedLinks\">\n          {this.props.user.username}{\" \"}\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(PostAuthor);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport NewComment from \"../../containers/NewComment/NewComment\";\nimport Comments from \"../../containers/Comments/Comments\";\nimport Icons from \"../../containers/Icons/Icons\";\nimport PostAuthor from \"../../containers/PostAuthor/PostAuthor\";\nimport moment from \"moment\";\nimport \"./DisplayPost.css\";\n\nconst DisplayPost = props => {\n  // const check = id => {\n  //   if (props.following) {\n  //     for (const user of props.following) {\n  //       if (user._id === id) {\n  //         return true;\n  //       }\n  //     }\n  //   }\n  // };\n  return (\n    <div className=\"container component\">\n      {props.post &&\n        props.post.author && (\n          <div className=\"row no-gutters d-flex justify-content-center\">\n            <div className=\"col-12 col-sm-7 d-none d-sm-block\">\n              <div className=\"card d-flex justify-content-center rounded-0 border-right-0 h-100\">\n                <img\n                  src={props.post.image}\n                  alt=\"\"\n                  className=\"rounded-0 img-fluid align-self-center\"\n                />\n              </div>\n            </div>\n            <div className=\"col-12 col-sm-4\">\n              <div className=\"card rounded-0 displayCard h-100\">\n                <div className=\"card-header bg-white p-3 d-block d-sm-none\">\n                  <PostAuthor userId={props.post.author.id} />\n                </div>\n                <img\n                  src={props.post.image}\n                  alt=\"\"\n                  className=\"rounded-0 card-img-top d-block d-sm-none\"\n                />\n                <div className=\"p-3 d-none d-sm-block\">\n                  <PostAuthor userId={props.post.author.id} />\n                  {/* {check(props.post.author.id) ? (\n                    <button\n                      className=\"ml-2 btn btn-sm btn-outline-dark\"\n                      onClick={() => props.unfollow(props.post.author.id)}\n                    >\n                      <span className=\"\">Unfollow</span>\n                    </button>\n                  ) : (\n                    <button\n                      className=\"ml-2 btn btn-sm btn-primary\"\n                      onClick={() => props.follow(props.post.author.id)}\n                    >\n                      <span className=\"\">Follow</span>\n                    </button>\n                  )} */}\n                  <hr />\n                  {props.post.description && (\n                    <div className=\"mt-1\">\n                      <Link\n                        to={`/users/${props.post.author.id}`}\n                        className=\"feedLinks\"\n                      >\n                        {props.post.author.username}\n                      </Link>{\" \"}\n                      {props.post.description}\n                    </div>\n                  )}\n                  <div className=\"commentSection\">\n                    <Comments\n                      postId={props.post._id}\n                      comments={props.post.comments}\n                      singlePost={true}\n                    />\n                  </div>\n                </div>\n                <div className=\"p-3 mt-auto\">\n                  <hr className=\"d-none d-sm-block\" />\n                  <Icons\n                    authorId={props.post.author.id}\n                    postId={props.post._id}\n                    likes={props.post.likes}\n                    singlePost={true}\n                  />\n                  <div>\n                    <Link to=\"/\" className=\"feedLinks\">\n                      {props.post.likes.length} Curtiu\n                    </Link>\n                  </div>\n                  <div className=\"d-block d-sm-none\">\n                    <Link\n                      to={`/users/${props.post.author.id}`}\n                      className=\"feedLinks\"\n                    >\n                      {props.post.author.username}\n                    </Link>{\" \"}\n                    {props.post.description}\n                  </div>\n                  <div className=\"d-block d-sm-none\">\n                    <Comments\n                      postId={props.post._id}\n                      comments={props.post.comments}\n                      singlePost={true}\n                    />\n                  </div>\n                  <div>\n                    <Link\n                      to={`/posts/${props.post._id}`}\n                      className=\"text-uppercase postDate\"\n                    >\n                      {moment(props.post.timePosted).fromNow()}\n                    </Link>\n                  </div>\n                  <hr />\n                  <NewComment postId={props.post._id} singlePost={true} />\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default DisplayPost;\n","import React, { Component } from \"react\";\nimport DisplayPost from \"../../components/DisplayPost/DisplayPost\";\nimport Loader from \"../../components/Loader/Loader\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/post\";\n\nconst mapStateToProps = state => {\n  return {\n    post: state.post.post,\n    postError: state.post.postError,\n    loading: state.common.loading\n    // following: state.common.following\n  };\n};\n\nclass Post extends Component {\n  componentDidMount() {\n    this.props.getPost(this.props.match.params.postId);\n    // this.props.getFollowing();\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.loading ? (\n          <Loader />\n        ) : (\n          <div>\n            {this.props.postError ? (\n              <div className=\"container component\">\n                <h4 className=\"text-center\">{this.props.postError}</h4>\n              </div>\n            ) : (\n              <DisplayPost post={this.props.post} />\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(Post);\n","import React, { Component } from \"react\";\nimport { reduxForm, Field } from \"redux-form\";\nimport Dropzone from \"react-dropzone\";\nimport Loader from \"../../components/Loader/Loader\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/post\";\nimport * as Icon from \"react-feather\";\n\nconst mapStateToProps = state => {\n  return {\n    imgPreview: state.common.preview,\n    image: state.post.post && state.post.post.image,\n    imagePreviewError: state.common.imagePreviewError,\n    submitLoading: state.common.submitLoading\n  };\n};\n\n// const validateImage = imageList => {\n//   if (imageList) {\n//     if (imageList.length > 1) {\n//       return \"You can upload one image at a time\";\n//     } else if (imageList.length === 1) {\n//       let selectedImage = imageList[0];\n//       if (!selectedImage.type.match(\"image.*\")) {\n//         return \"Only image files are allowed\";\n//       } else if (selectedImage.size > 1048576) {\n//         return \"Maximum file size exceeded\";\n//       }\n//     }\n//   }\n// };\n\nconst renderDropzoneField = ({ input, name }) => {\n  return (\n    <Dropzone\n      name={name}\n      className=\"drop mt-1 rounded\"\n      accept=\"image/jpeg, image/jpg, image/png\"\n      onDrop={filesToUpload => input.onChange(filesToUpload)}\n    >\n      <div className=\"d-flex justify-content-center h-100\">\n        <div className=\"text-center align-self-center\">\n          <div>\n            <Icon.Plus className=\"text-muted camera\" />\n          </div>\n          <span className=\"text-muted avatarText\">Escolher Foto</span>\n        </div>\n      </div>\n    </Dropzone>\n  );\n};\n\nlet EditPostForm = props => {\n  const { handleSubmit, onValues, pristine, submitting, errorMsg } = props;\n  return (\n    <form onSubmit={handleSubmit} className=\"mt-4\">\n      {errorMsg && <small className=\"error\">{errorMsg}</small>}\n      <Field name=\"image\" component={renderDropzoneField} onChange={onValues} />\n      <Field\n        name=\"caption\"\n        className=\"form-control form-control-sm mt-1 inputBg\"\n        component=\"textarea\"\n        placeholder={\"Descrição\"}\n      />\n      {errorMsg ? (\n        <button className=\"btn btn-primary btn-sm btn-block mt-3\" disabled>\n          POSTAR\n        </button>\n      ) : (\n        <button\n          className=\"btn btn-primary btn-sm btn-block mt-3\"\n          disabled={pristine || submitting}\n        >\n          POSTAR\n        </button>\n      )}\n    </form>\n  );\n};\n\nEditPostForm = reduxForm({\n  form: \"editPost\",\n  enableReinitialize: true\n})(EditPostForm);\n\nEditPostForm = connect(state => ({\n  initialValues: {\n    caption: state.post.post && state.post.post.description,\n    image: state.post.post && state.post.post.image\n  }\n}))(EditPostForm);\n\nclass EditPost extends Component {\n  componentDidMount() {\n    this.props.getPostForEdit(this.props.match.params.postId);\n  }\n  handleSubmit = data => {\n    this.props.submitNewPost();\n    this.props.editPost(data, this.props.match.params.postId);\n  };\n\n  onValues = images => {\n    this.props.getPreview(images);\n  };\n\n  componentWillUnmount() {\n    this.props.resetValue();\n  }\n\n  render() {\n    return (\n      <div className=\"container d-flex justify-content-center component\">\n        {this.props.submitLoading ? (\n          <Loader />\n        ) : (\n          <div className=\"card p-2 postCard rounded-0\">\n            <div className=\"card-body\">\n              <h1 className=\"text-center\">Editar Postagem</h1>\n              {this.props.imgPreview ? (\n                <div className=\"text-center mt-4\">\n                  <img\n                    src={this.props.imgPreview}\n                    className=\"imgPreview\"\n                    alt=\"\"\n                    width=\"100%\"\n                  />\n                </div>\n              ) : (\n                <div className=\"text-center mt-4\">\n                  <img\n                    src={this.props.image}\n                    className=\"imgPreview\"\n                    alt=\"\"\n                    width=\"100%\"\n                  />\n                </div>\n              )}\n              <EditPostForm\n                onSubmit={this.handleSubmit}\n                onValues={this.onValues}\n                preview={this.props.imgPreview}\n                errorMsg={this.props.imagePreviewError}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nexport default connect(\n  mapStateToProps,\n  actions\n)(EditPost);\n","import React, { Component } from \"react\";\nimport { reduxForm, Field } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/comment\";\n\nconst mapStateToProps = state => {\n  return {\n    commentError: state.post.commentError\n  };\n};\n\nlet EditCommentForm = props => {\n  const { handleSubmit, pristine, submitting } = props;\n  return (\n    <form onSubmit={handleSubmit} className=\"mt-4\">\n      <Field\n        name=\"comment\"\n        className=\"form-control form-control-sm\"\n        component=\"textarea\"\n        rows=\"3\"\n        type=\"text\"\n        label=\"Comentar...\"\n        autoComplete=\"off\"\n      />\n\n      <button\n        className=\"btn btn-primary btn-sm btn-block mt-3\"\n        disabled={pristine || submitting}\n      >\n        Edit\n      </button>\n    </form>\n  );\n};\n\nEditCommentForm = reduxForm({\n  enableReinitialize: true\n})(EditCommentForm);\n\nEditCommentForm = connect(state => ({\n  initialValues: {\n    comment: state.post.comment\n  }\n}))(EditCommentForm);\n\nclass EditComment extends Component {\n  componentDidMount() {\n    this.props.getComment(\n      this.props.match.params.postId,\n      this.props.match.params.commentId\n    );\n  }\n  handleSubmit = data => {\n    this.props.editComment(\n      this.props.match.params.postId,\n      this.props.match.params.commentId,\n      data.comment\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"container d-flex justify-content-center component\">\n        {this.props.commentError ? (\n          <h4>{this.props.commentError}</h4>\n        ) : (\n          <div className=\"card p-2 postCard rounded-0\">\n            <div className=\"card-body\">\n              <h1 className=\"text-center\">Edit Comment</h1>\n\n              <EditCommentForm\n                form={`${this.props.match.params.commentId}`}\n                onSubmit={this.handleSubmit}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(EditComment);\n","import React from \"react\";\n\nconst ErrorPage = () => (\n  <div className=\"container mt-4 text-center\">\n    <h3>Error 404 Not Found</h3>\n  </div>\n);\n\nexport default ErrorPage;\n","import React, { Component } from \"react\";\nimport { reduxForm, Field } from \"redux-form\";\nimport Dropzone from \"react-dropzone\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/user\";\nimport \"./EditProfile.css\";\n\nconst mapStateToProps = state => {\n  return {\n    imgPreview: state.common.preview,\n    avatar: state.user.user && state.user.user.avatar,\n    username: state.user.user.username,\n    imagePreviewError: state.common.imagePreviewError\n  };\n};\n\n// const validateImage = imageList => {\n//   if (imageList) {\n//     if (imageList.length > 1) {\n//       return \"You can upload one image at a time\";\n//     } else if (imageList.length === 1) {\n//       let selectedImage = imageList[0];\n//       if (!selectedImage.type.match(\"image.*\")) {\n//         return \"Only image files are allowed\";\n//       } else if (selectedImage.size > 1048576) {\n//         return \"Maximum file size exceeded\";\n//       }\n//     }\n//   }\n// };\n\nconst renderDropzoneField = ({ input, name }) => {\n  return (\n    <Dropzone\n      name={name}\n      className=\"upload text-primary\"\n      accept=\"image/jpeg, image/jpg, image/png\"\n      onDrop={filesToUpload => input.onChange(filesToUpload)}\n    >\n      Editar Foto do Perfil\n    </Dropzone>\n  );\n};\n\nlet EditProfileForm = props => {\n  const {\n    handleSubmit,\n    onValues,\n    pristine,\n    submitting,\n    errorMsg,\n    info,\n    preview\n  } = props;\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"row mb-3\">\n        <div className=\"col-4 col-md-2\">\n          {preview ? (\n            <img\n              src={preview}\n              className=\"mr-3 rounded-circle align-self-center\"\n              alt=\"\"\n              width=\"65\"\n              height=\"65\"\n            />\n          ) : (\n            <img\n              src={info.avatar}\n              className=\"mr-3 rounded-circle align-self-center\"\n              alt=\"\"\n              width=\"65\"\n              height=\"65\"\n            />\n          )}\n        </div>\n        <div className=\"col-8 col-md-10\">\n          <h5>{info.username}</h5>\n          <Field\n            name=\"avatar\"\n            component={renderDropzoneField}\n            onChange={onValues}\n          />\n          {errorMsg && <small className=\"error\">{errorMsg}</small>}\n        </div>\n      </div>\n\n      <div className=\"form-group row\">\n        <label className=\"col-sm-2 col-form-label\">Nome Completo</label>\n        <div className=\"col-sm-10\">\n          <Field\n            name=\"name\"\n            className=\"form-control form-control-sm\"\n            component=\"input\"\n          />\n        </div>\n      </div>\n      <div className=\"form-group row\">\n        <label className=\"col-sm-2 col-form-label\">Nome Único</label>\n        <div className=\"col-sm-10\">\n          <Field\n            name=\"username\"\n            className=\"form-control form-control-sm\"\n            component=\"input\"\n            disabled\n          />\n        </div>\n      </div>\n      <div className=\"form-group row\">\n        <label className=\"col-sm-2 col-form-label\">Bio</label>\n        <div className=\"col-sm-10\">\n          <Field\n            name=\"bio\"\n            className=\"form-control form-control-sm\"\n            component=\"textarea\"\n          />\n        </div>\n      </div>\n      {errorMsg ? (\n        <button className=\"btn btn-primary btn-sm btn-block mt-3\" disabled>\n          POSTAR\n        </button>\n      ) : (\n        <button\n          className=\"btn btn-primary btn-sm btn-block mt-3\"\n          disabled={pristine || submitting}\n        >\n          ATUALIZAR\n        </button>\n      )}\n    </form>\n  );\n};\n\nEditProfileForm = reduxForm({\n  form: \"editProfile\",\n  enableReinitialize: true\n})(EditProfileForm);\n\nEditProfileForm = connect(state => ({\n  initialValues: {\n    username: state.user.user.username,\n    avatar: state.user.user.avatar,\n    name: state.user.user.name,\n    bio: state.user.user.bio\n  }\n}))(EditProfileForm);\n\nclass EditProfile extends Component {\n  componentDidMount() {\n    this.props.getUserProfile(this.props.match.params.userId);\n  }\n  handleSubmit = data => {\n    this.props.editProfile(data, this.props.match.params.userId);\n  };\n\n  onValues = images => {\n    this.props.getPreview(images);\n  };\n\n  componentWillUnmount() {\n    this.props.resetValue();\n  }\n\n  render() {\n    return (\n      <div className=\"container d-flex justify-content-center component\">\n        <div className=\"card p-2 editProfileCard rounded-0\">\n          <div className=\"card-body\">\n            <EditProfileForm\n              onSubmit={this.handleSubmit}\n              onValues={this.onValues}\n              preview={this.props.imgPreview}\n              errorMsg={this.props.imagePreviewError}\n              info={{\n                username: this.props.username,\n                avatar: this.props.avatar\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default connect(\n  mapStateToProps,\n  actions\n)(EditProfile);\n","import React, { Component } from \"react\";\nimport DisplayPosts from \"../../components/DisplayPosts/DisplayPosts\";\nimport Loader from \"../../components/Loader/Loader\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/post\";\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.post.posts,\n    loading: state.common.loading\n  };\n};\n\nclass Explore extends Component {\n  componentDidMount() {\n    this.props.getAllPosts();\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.loading ? (\n          <Loader />\n        ) : (\n          <DisplayPosts posts={this.props.posts} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(Explore);\n","import React, { Component } from \"react\";\nimport { Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport history from \"../../history\";\nimport Navbar from \"../Navbar/Navbar\";\nimport Login from \"../Login/Login\";\nimport Register from \"../Register/Register\";\nimport Feed from \"../Feed/Feed\";\nimport NewPost from \"../NewPost/NewPost\";\nimport Profile from \"../Profile/Profile\";\nimport Post from \"../Post/Post\";\nimport EditPost from \"../EditPost/EditPost\";\nimport EditComment from \"../EditComment/EditComment\";\nimport ErrorPage from \"../../components/ErrorPage/ErrorPage\";\nimport EditProfile from \"../../containers/EditProfile/EditProfile\";\nimport Explore from \"../../containers/Explore/Explore\";\nimport \"./App.css\";\nimport moment from \"moment\";\nimport ptBr from \"moment/locale/pt-br\";\nimport BackOffice from \"../BackOffice/BackOffice\";\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.auth.isAuth,\n    redirect: state.auth.redirect\n  };\n};\n\nconst redirectIfNotLoggedIn = () => {\n  return <Redirect to=\"/\" />;\n};\n\nclass App extends Component {\n  render() {\n    moment.locale('pt-br', [ptBr])\n    return (\n      <Router history={history}>\n        <div>\n          <Route path=\"/\" component={Navbar} />\n          <div className=\"mb-5 app\">\n            {localStorage.token ? (\n              <Switch>\n                {/* {this.props.isAuth && <Redirect to=\"/posts\" />} */}\n                <Route exact path=\"/\" render={() => <Redirect to=\"/posts\" />} />\n                <Route exact path=\"/posts\" component={Feed} />\n                <Route path=\"/explore\" component={Explore} />\n                <Route path=\"/posts/new\" component={NewPost} />\n                <Route path=\"/edit/posts/:postId\" component={EditPost} />\n                <Route path=\"/posts/:postId\" component={Post} />\n                <Route path=\"/users/:userId\" component={Profile} />\n                <Route path=\"/accounts/:userId/edit\" component={EditProfile} />\n                {JSON.parse(localStorage.getItem(\"Auth\")).isAdm ? <Route path=\"/backoffice\" component={BackOffice} /> : <div />}\n                <Route\n                  path=\"/edit/posts/:postId/comments/:commentId\"\n                  component={EditComment}\n                />\n                <Route component={ErrorPage} />\n              </Switch>\n            ) : (\n              <Switch>\n                <Route exact path=\"/\" component={Login} />\n                <Route path=\"/register\" component={Register} />\n                <Route component={redirectIfNotLoggedIn} />\n              </Switch>\n            )}\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(App);\n","import {\n  LOGIN_USER,\n  REGISTER_USER,\n  LOGOUT_USER,\n  RESET_VALUE\n} from \"../constants/action-types\";\n\nconst initialState = {\n  user: {},\n  isAuth: false,\n  redirect: \"\",\n  loginError: \"\",\n  registerError: \"\",\n  registerSuccess: \"\"\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case LOGIN_USER:\n      if (action.payload.id) {\n        return {\n          user: action.payload,\n          isAuth: true\n        };\n      } else {\n        return {\n          loginError: action.payload,\n          isAuth: false\n        };\n      }\n    case REGISTER_USER:\n      if (action.payload.error) {\n        return {\n          registerError: action.payload.error\n        };\n      } else {\n        return {\n          registerSuccess: action.payload.success\n        };\n      }\n    case LOGOUT_USER:\n      return {\n        isAuth: false,\n        redirect: action.payload\n      };\n    case RESET_VALUE:\n      return {\n        loginError: action.payload,\n        registerError: action.payload,\n        registerSuccess: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  CREATE_POST,\n  GET_FEED,\n  GET_POST,\n  ADD_COMMENT,\n  ADD_COMMENT_SINGLE_POST,\n  GET_COMMENT,\n  LIKE_POST,\n  DISLIKE_POST,\n  DELETE_POST,\n  DELETE_SINGLE_POST,\n  DELETE_COMMENT,\n  DELETE_COMMENT_SINGLE_POST,\n  LIKE_SINGLE_POST,\n  DISLIKE_SINGLE_POST,\n  GET_POST_FOR_EDIT,\n  POST_ERROR,\n  COMMENT_ERROR\n} from \"../constants/action-types\";\n\nconst initialState = {\n  posts: [],\n  post: {},\n  editError: \"\",\n  deletePostMsg: \"\",\n  comment: \"\",\n  postError: \"\",\n  commentError: \"\"\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case CREATE_POST:\n      return action.payload;\n    case DELETE_POST:\n      const newPostsDelete = state.posts.filter(\n        item => item._id !== action.payload\n      );\n      return {\n        posts: newPostsDelete\n      };\n    case DELETE_SINGLE_POST:\n      return action.payload;\n    case GET_FEED:\n      return {\n        posts: action.payload\n      };\n    case GET_POST_FOR_EDIT:\n      return {\n        post: action.payload\n      };\n    case GET_POST:\n      return {\n        post: action.payload\n      };\n    case POST_ERROR:\n      return {\n        postError: action.payload\n      };\n    case ADD_COMMENT:\n      const newPostsComment = state.posts.map(post => {\n        if (post._id === action.payload.postId) {\n          post.comments = [...post.comments, action.payload.comment];\n          return post;\n        } else {\n          return post;\n        }\n      });\n      return {\n        posts: newPostsComment\n      };\n    case ADD_COMMENT_SINGLE_POST:\n      const commentSinglePost = state;\n      return {\n        ...commentSinglePost,\n        post: {\n          ...commentSinglePost.post,\n          comments: [...commentSinglePost.post.comments, action.payload]\n        }\n      };\n    case GET_COMMENT:\n      return {\n        comment: action.payload\n      };\n    case COMMENT_ERROR:\n      return {\n        commentError: action.payload\n      };\n    case DELETE_COMMENT:\n      const newPostsDeleteComment = state.posts.map(post => {\n        if (post._id === action.payload.postId) {\n          post.comments = post.comments.filter(\n            item => item._id !== action.payload.commentId\n          );\n          return post;\n        } else {\n          return post;\n        }\n      });\n      return {\n        posts: newPostsDeleteComment\n      };\n    case DELETE_COMMENT_SINGLE_POST:\n      const deleteCommentSinglePost = state;\n      return {\n        ...deleteCommentSinglePost,\n        post: {\n          ...deleteCommentSinglePost.post,\n          comments: deleteCommentSinglePost.post.comments.filter(\n            comment => comment._id !== action.payload._id\n          )\n        }\n      };\n    case LIKE_POST:\n      const newPostsLike = state.posts.map(post => {\n        if (post._id === action.payload.postId) {\n          post.likes = [...post.likes, action.payload.like];\n          return post;\n        } else {\n          return post;\n        }\n      });\n      return {\n        posts: newPostsLike\n      };\n    case LIKE_SINGLE_POST:\n      const likeSinglePost = state;\n      return {\n        ...likeSinglePost,\n        post: {\n          ...likeSinglePost.post,\n          likes: [...likeSinglePost.post.likes, action.payload]\n        }\n      };\n    case DISLIKE_POST:\n      const newPostsDislike = state.posts.map(post => {\n        if (post._id === action.payload.postId) {\n          post.likes = post.likes.filter(\n            item => item._id !== action.payload.likeId\n          );\n          return post;\n        } else {\n          return post;\n        }\n      });\n      return {\n        posts: newPostsDislike\n      };\n    case DISLIKE_SINGLE_POST:\n      const dislikeSinglePost = state;\n      return {\n        ...dislikeSinglePost,\n        post: {\n          ...dislikeSinglePost.post,\n          likes: dislikeSinglePost.post.likes.filter(\n            like => like._id !== action.payload._id\n          )\n        }\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  USER_PROFILE,\n  FOLLOW_USER,\n  UNFOLLOW_USER\n} from \"../constants/action-types\";\n\nconst initialState = {\n  user: {},\n  posts: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case USER_PROFILE:\n      return {\n        user: action.payload.user,\n        posts: action.payload.posts\n      };\n    case FOLLOW_USER:\n      const newStateFollow = state;\n      return {\n        ...newStateFollow,\n        user: {\n          ...newStateFollow.user,\n          followers: [...newStateFollow.user.followers, action.payload]\n        }\n      };\n    case UNFOLLOW_USER:\n      return {\n        user: action.payload,\n        posts: state.posts\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_PREVIEW,\n  RESET_VALUE,\n  SUBMIT_NEW_POST,\n  EDIT_POST,\n  HOVER_POST,\n  UNHOVER_POST,\n  CHECK_IF_FOLLOWING,\n  LOADING,\n  SUBMIT_LOADING,\n  SET_LOADING\n} from \"../constants/action-types\";\n\nconst initialState = {\n  prevew: \"\",\n  imagePreviewError: \"\",\n  submitted: false,\n  visible: null,\n  loading: true,\n  submitLoading: false,\n  following: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PREVIEW:\n      if (action.payload.message) {\n        return {\n          imagePreviewError: action.payload.message\n        };\n      }\n      return {\n        preview: action.payload\n      };\n    case RESET_VALUE:\n      return {\n        preview: action.payload,\n        imagePreviewError: action.payload\n      };\n    case SUBMIT_NEW_POST:\n      return {\n        submitted: action.payload\n      };\n    case EDIT_POST:\n      return {\n        imagePreviewError: action.payload\n      };\n    case HOVER_POST:\n      return {\n        visible: action.payload\n      };\n    case UNHOVER_POST:\n      return {\n        visible: action.payload\n      };\n    case CHECK_IF_FOLLOWING:\n      return {\n        following: action.payload\n      };\n    case LOADING:\n      return {\n        loading: false\n      };\n    case SUBMIT_LOADING:\n      return {\n        submitLoading: true\n      };\n    case SET_LOADING:\n      return {\n        loading: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\nimport auth from \"./auth\";\nimport post from \"./post\";\nimport user from \"./user\";\nimport common from \"./common\";\n\nexport default combineReducers({\n  auth,\n  form: formReducer,\n  post,\n  user,\n  common\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/App/App\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}